<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teamx.exsite.model.mapper.user.UserMapper">
  
  <insert id="registerUser" useGeneratedKeys="false">
    INSERT INTO USER_INFO (USER_NO, NAME, USER_ID, USER_PW, EMAIL, PHONE, ADDRESS, ADDRESS_DETAIL, METHOD)
       VALUES (
          SEQ_USER_NO.NEXTVAL,
          #{name},
          #{userId},
          #{userPw},
          #{email},
          #{phone},
          #{address},
          #{addressDetail},
          'NORMAL'
       )
  </insert>
  
  <select id="getGeneratedUserNo" resultType="int">
    SELECT SEQ_USER_NO.CURRVAL FROM DUAL
  </select>
  
  <insert id="registerWithNaver">
     INSERT INTO USER_INFO (USER_NO, NAME, USER_ID, EMAIL, PHONE, METHOD, SOCIAL_USER_IDENTIFIER)
        VALUES (
           SEQ_USER_NO.NEXTVAL,
           #{name},
           'N_' || SEQ_NAVER_USER_NO.NEXTVAL,
           #{email},
           #{phone},
           #{method},
           #{socialUserIdentifier}
        )
  </insert>
  
  <insert id="registerWithGoogle">
     INSERT INTO USER_INFO (USER_NO, NAME, USER_ID, EMAIL, METHOD, SOCIAL_USER_IDENTIFIER)
        VALUES (
           SEQ_USER_NO.NEXTVAL,
           #{name},
           'G_' || SEQ_GOOGLE_USER_NO.NEXTVAL,
           #{email},
           #{method},
           #{socialUserIdentifier}
        )
  </insert>
  
  <select id="idCheck">
     SELECT COUNT(*) 
     FROM USER_INFO 
     WHERE USER_ID = #{id}
  </select>
  
  <select id="basicLogin">
     SELECT USER_NO, NAME, USER_ID, USER_PW, EMAIL, PHONE, ADDRESS, ADDRESS_DETAIL, METHOD, GRADE
     FROM USER_INFO
     WHERE USER_ID = #{userId} AND METHOD = 'NORMAL' AND USER_STATUS = 'N'
  </select>
  
  <select id="mailCheck">
     SELECT COUNT(*)
     FROM USER_INFO
     WHERE EMAIL = #{email}
  </select>
  
  <select id="phoneCheck">
     SELECT COUNT(*)
     FROM USER_INFO
     WHERE PHONE = #{phone}
  </select>
  
  <select id="idSearch">
     SELECT USER_ID, USER_STATUS
     FROM USER_INFO
     WHERE (EMAIL = #{authMethod} OR PHONE = #{authMethod}) AND METHOD = 'NORMAL'
  </select>
  
  <select id="socialUserIdSearch">
     SELECT USER_ID
     FROM USER_INFO
     WHERE (EMAIL = #{authMethod} OR PHONE = #{authMethod}) AND METHOD = #{loginMethod}
  </select>
  
  <select id="searchUserName">
     SELECT COUNT(*)
     FROM USER_INFO
     WHERE NAME = #{name}
  </select>
  
  <update id="passwordChange">
     UPDATE USER_INFO
     SET USER_PW = #{encodedPassword}
     WHERE USER_ID = #{userId} AND NAME = #{name} AND USER_STATUS = 'N' AND (EMAIL = #{authMethod} OR PHONE = #{authMethod})
  </update>
  
  <select id="accountCheck">
     SELECT COUNT(*)
     FROM USER_INFO
     WHERE METHOD = #{signupMethod} AND EMAIL = #{email}
  </select>
  
  <!-- 관리자 페이지 전체 유저 정보 불러오기 -->
  <select id="getAllUsers" resultType="com.teamx.exsite.model.dto.user.UserDTO">
        SELECT 
            USER_NO,
            NAME,
            USER_ID,
            USER_PW,
            EMAIL,
            PHONE,
            ADDRESS,
            CREATE_DATE,
            UPDATE_DATE,
            USER_STATUS,
            METHOD,
            GRADE
        FROM USER_INFO
    </select>
    
    <!-- 관리자 페이지 회원 검색하기 -->
    <select id="searchUsers" resultType="com.teamx.exsite.model.dto.user.UserDTO">
        SELECT 
            USER_NO,
            NAME,
            USER_ID,
            USER_PW,
            EMAIL,
            PHONE,
            ADDRESS,
            CREATE_DATE,
            UPDATE_DATE,
            USER_STATUS,
            METHOD,
            GRADE
        FROM USER_INFO
        WHERE NAME LIKE '%' || #{name} || '%'
    </select>
    
    <!-- 관리자 페이지 해당회원 정보 불러오기 -->
    <select id="findByUserNo" resultType="com.teamx.exsite.model.dto.user.UserDTO">
        SELECT * FROM USER_INFO WHERE USER_NO = #{userNo}
    </select>
    
    <!-- 관리자 페이지 해당회원 정보 수정하기 -->
    <update id="updateUserInfo">
        UPDATE USER_INFO
        SET USER_PW = #{userPw},
           NAME = #{name},
            EMAIL = #{email},
            PHONE = #{phone},
            ADDRESS = #{address},
            GRADE = #{grade}
        WHERE USER_NO = #{userNo}
    </update>
    
    <!-- 관리자 페이지 해당회원 탈퇴 처리하기 -->
    <update id="updateUserStatus" parameterType="String">
       UPDATE user_info
       SET USER_STATUS = 'Y', UPDATE_DATE = SYSDATE
       WHERE USER_ID = #{userId}
   </update>
   
  <select id="identifierCheck">
     SELECT COUNT(*)
     FROM USER_INFO
     WHERE SOCIAL_USER_IDENTIFIER = #{email}
  </select>
  
  <select id="socialUserLogin">
     SELECT USER_NO, NAME, USER_ID, EMAIL, PHONE, ADDRESS, ADDRESS_DETAIL, SOCIAL_USER_IDENTIFIER, METHOD, GRADE
     FROM USER_INFO
     WHERE SOCIAL_USER_IDENTIFIER = #{socialUserIdentifier} AND USER_STATUS='N'
  </select>
  
  <select id="getPassword">
     SELECT USER_PW
     FROM USER_INFO
     WHERE USER_NO = #{userNo}
  </select>
  
  <update id="normalUserModifyInfo">
     UPDATE USER_INFO
      SET EMAIL = #{email}, PHONE = #{phone}, ADDRESS = #{address}, ADDRESS_DETAIL = #{addressDetail}
   WHERE USER_NO = #{userNo}
  </update>
  
  <select id="selectUserInfo">
     SELECT USER_NO, NAME, USER_ID, EMAIL, PHONE, ADDRESS, ADDRESS_DETAIL, METHOD, GRADE
     FROM USER_INFO
     WHERE USER_NO = #{userNo}
  </select>
  
    <update id="socialUserModifyInfo">
     UPDATE USER_INFO
      SET PHONE = #{phone}, ADDRESS = #{address}, ADDRESS_DETAIL = #{addressDetail}
   WHERE USER_NO = #{userNo}
  </update>
  
  <update id="loginUserPasswordChange">
     UPDATE USER_INFO
        SET USER_PW = #{encodedPassword}
     WHERE USER_NO = #{userNo}
  </update>
  
  <update id="withDrawUser">
     UPDATE USER_INFO
        SET USER_STATUS = 'Y'
     WHERE USER_NO = #{userNo}
  </update>
  
  <update id="withDrawSocialUser">
     UPDATE USER_INFO
        SET USER_STATUS = 'Y'
     WHERE USER_NO = #{userNo} AND EMAIL = #{email}
  </update>
  
</mapper>